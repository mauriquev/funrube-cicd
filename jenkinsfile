pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-credentials')
        AWS_SECRET_ACCESS_KEY = credentials('aws-credentials')
        AWS_REGION = 'us-east-1'
        LAMBDA_FUNCTION_NAME = 'EmailRetrival' // name of the lambda function
        GITHUB_REPO_URL = 'https://github.com/mauriquev/funtube-cicd.git' // GitHub repository URL
        GITHUB_FILE_PATH = 'lambda_function.py' // Path to the lambda_function.py file in the repository
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    credentialsId: 'github-token',
                    url: GITHUB_REPO_URL
            }
        }
        stage('Check Changes') {
            steps {
                script {
                    def fileChanges = sh(
                        script: "git diff --name-only HEAD^ HEAD | grep ${GITHUB_FILE_PATH}",
                        returnStdout: true
                    ).trim()
                    if (fileChanges) {
                        echo "Changes found in ${GITHUB_FILE_PATH}. Proceeding with deployment..."
                    } else {
                        echo "No changes found in ${GITHUB_FILE_PATH}. Skipping deployment..."
                        return
                    }
                }
            }
        }
        stage('Validate Lambda Function') {
            steps {
                script {
                    def validateFunction = sh(
                        script: "aws lambda get-function-configuration --function-name $LAMBDA_FUNCTION_NAME",
                        returnStatus: true
                    )
                    if (validateFunction == 0) {
                        echo 'Lambda function validation successful. Proceeding with deployment...'
                    } else {
                        echo 'Lambda function validation failed. Skipping deployment...'
                        return
                    }
                }
            }
        }
        stage('Test') {
            steps {
                // Run tests step
                // Replace with the necessary code to run tests
            }
        }
        stage('Deploy to AWS Lambda') {
            steps {
                // Deployment step
                // Replace with the necessary code to deploy to AWS Lambda
            }
        }
    }
}
